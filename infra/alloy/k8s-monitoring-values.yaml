cluster:
  name: local.valesor.dev
externalServices:
  prometheus:
    host: https://prometheus-us-central1.grafana.net
    secret:
      create: false
      name: grafana-cloud-credentials-metrics
      namespace: alloy
  loki:
    host: https://logs-prod-017.grafana.net
    secret:
      create: false
      name: grafana-cloud-credentials-logs
      namespace: alloy
  tempo:
    host: https://tempo-us-central1.grafana.net:443
    secret:
      create: false
      name: grafana-cloud-credentials-traces
      namespace: alloy
metrics:
  enabled: true
  cost:
    enabled: true
  node-exporter:
    enabled: true
logs:
  enabled: true
  pod_logs:
    enabled: true
  cluster_events:
    enabled: true
traces:
  enabled: true
receivers:
  grpc:
    enabled: true
  http:
    enabled: true
  zipkin:
    enabled: true
opencost:
  enabled: true
  opencost:
    exporter:
      defaultClusterId: local.valesor.dev
    prometheus:
      existingSecretName: grafana-cloud-credentials-metrics
      external:
        url: https://prometheus-us-central1.grafana.net/api/prom
kube-state-metrics:
  enabled: true
prometheus-node-exporter:
  enabled: true
prometheus-operator-crds:
  enabled: false
alloy: {}
alloy-events: {}
alloy-logs: {}
extraConfig: |-
  prometheus.exporter.postgres "integrations_postgres_exporter" {
    data_source_names = ["postgresql://postgres:postgres@postgres.tabular:5432/postgres?sslmode=disable"]
  }
  discovery.relabel "integrations_postgres_exporter" {
      targets = prometheus.exporter.postgres.integrations_postgres_exporter.targets

      rule {
          target_label = "instance"
          replacement  = constants.hostname
      }
      rule {                
          target_label = "job"
          replacement  = "integrations/postgres_exporter"
      }
  }
  prometheus.scrape "integrations_postgres_exporter" {
      targets    = discovery.relabel.integrations_postgres_exporter.output
      forward_to = [prometheus.remote_write.metrics_service.receiver]
      job_name   = "integrations/postgres_exporter"
  }
  prometheus.exporter.mongodb "integrations_mongodb_exporter" {
    mongodb_uri    = "mongodb://mongodb-service.document:27017"
    direct_connect = true
  }
  discovery.relabel "integrations_mongodb_exporter" {
      targets = prometheus.exporter.mongodb.integrations_mongodb_exporter.targets

      rule {
          target_label = "service_name"
          replacement  = "mongodb"
      }

      rule {
          target_label = "mongodb_cluster"
          replacement  = "local.valesor.dev"
      }

      rule {
          target_label = "instance"
          replacement  = "mongodb-service"
      }
  }
  prometheus.scrape "integrations_mongodb_exporter" {
      targets    = discovery.relabel.integrations_mongodb_exporter.output
      forward_to = [prometheus.remote_write.metrics_service.receiver]
      job_name   = "integrations/mongodb_exporter"
  }
